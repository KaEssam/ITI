//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Day2_LinQ_EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Company_SDEntities : DbContext
    {
        public Company_SDEntities()
            : base("name=Company_SDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<Project> Project { get; set; }
        public virtual DbSet<Departments> Departments { get; set; }
        public virtual DbSet<Dependent> Dependent { get; set; }
        public virtual DbSet<Project1> Project1 { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Works_for> Works_for { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
    
        public virtual ObjectResult<string> CheckEmployeeCountInProject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CheckEmployeeCountInProject");
        }
    
        public virtual ObjectResult<CheckEmployeeInProject_Result> CheckEmployeeInProject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckEmployeeInProject_Result>("CheckEmployeeInProject");
        }
    
        public virtual ObjectResult<checkNumberOfEmployees_Result> checkNumberOfEmployees(Nullable<int> project_number)
        {
            var project_numberParameter = project_number.HasValue ?
                new ObjectParameter("project_number", project_number) :
                new ObjectParameter("project_number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkNumberOfEmployees_Result>("checkNumberOfEmployees", project_numberParameter);
        }
    
        public virtual int CountStudentsPerDepartment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CountStudentsPerDepartment");
        }
    }
}
